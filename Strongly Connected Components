#include<bits/stdc++.h>
using namespace std;
#define int long long int
#define pb push_back
#define en '\n'
#define f first
#define se second
//#define pb push_back
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
//
//#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#define NAI()                              \
          ios_base::sync_with_stdio(false);\
          cin.tie(NULL);cout.tie(NULL);     \

const int N=1e5;
vector<int>adj[N+10],tr[N+10];
vector<bool>vis(N+10);
vector<int>order,SCC;
void dfs(int u){
    vis[u]=true;
    for(auto it:adj[u]){
        if(!vis[it])dfs(it);
    }
    order.pb(u);
}
void dfs1(int u){
   vis[u]=true;
   for(auto it:tr[u]){
    if(!vis[it])dfs1(it);
   }
   SCC.pb(u);
}
void solve()
{
   int n,m,a,b;
   cin>>n>>m;
   for(int i=0;i<=n;i++)vis[i]=false,adj[i].clear(),tr[i].clear();
   for(int i=0;i<m;i++){
    cin>>a>>b;
    adj[a].pb(b);
    tr[b].pb(a);
   }
   for(int i=1;i<=n;i++)if(!vis[i])dfs(i);
   for(int i=1;i<=n;i++)vis[i]=false;
   for(int i=1;i<=n;i++){
    if(!vis[order[n-i]]){
        SCC.clear();
        dfs1(order[n-i]);
        cout<<"Print SCC"<<en;
        for(auto it:SCC)cout<<it<<" ";
        cout<<en;
    }
   }
   SCC.clear();
   order.clear();
}
signed main()
{
   NAI();
   int t=1;
   cin>>t;
   while(t--)solve();
}
